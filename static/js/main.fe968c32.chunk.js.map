{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Container","styled","div","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","buttonsVisible","currentRowIndex","RemoveColumnButton","currentCellIndex","Square","props","createSquare","newRows","newColumns","initialHeight","initialWidth","cells","uniqueKey","rows","setState","columns","throttle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","onDragStart","clientX","clientY","offsetX","containerRef","current","getBoundingClientRect","left","offsetY","top","dragging","onDragging","pageX","pageY","state","style","margin","onDragEnd","movingButtons","target","tagName","cellIndex","parentNode","rowIndex","createColumn","cloneColumns","createRow","cloneRows","deleteColumn","lastCellIndex","length","filter","column","index","prevState","removeColumnButtonDisplay","deleteRow","lastRowIndex","row","removeRowButtonDisplay","showButtons","hideButtons","containerPosition","React","createRef","document","addEventListener","event","ref","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","key","id","cell","onClick","Component","defaultProps","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fe968c32.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 100px;\n  position: absolute;\n\n  left: 0;\n  top: 0;\n  user-select: none;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #48aae6;\n  cursor: grab;\n  user-select: none;\n`;\n\nconst Cell = styled.td`\n  height: ${({ cellSize }) => cellSize}px;\n  width: ${({ cellSize }) => cellSize}px;\n\n  padding: 0;\n\n  background-color: #48aae6;\n\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n\n  height: ${({ cellSize }) => cellSize}px;\n  width: ${({ cellSize }) => cellSize}px;\n  margin: 2px;\n\n  color: #ffffff;\n\n  font-size: ${({ cellSize }) => cellSize / 2}px;\n  font-weight: bold;\n  text-align: center;\n\n  opacity: 1;\n\n  transition-duration: 0.6s;\n  cursor: pointer;\n\n  user-select: none;\n\n  &:hover {\n    opacity: 0.8;\n    transition-duration: 0.5s;\n  }\n`;\n\nconst AddButtons = styled(Button)`\n  background-color: #f3a500;\n`;\n\nconst RemoveButtons = styled(Button)`\n  visibility: hidden;\n  opacity: 0;\n\n  background-color: #b20000;\n\n  line-height: ${({ cellSize }) => cellSize - cellSize / 5}px;\n`;\n\nconst AddRowButton = styled(AddButtons)`\n  top: 100%;\n  left: 1px;\n`;\n\nconst AddColumnButton = styled(AddButtons)`\n  top: 1px;\n  left: 100%;\n`;\n\nconst RemoveRowButton = styled(RemoveButtons)`\n  visibility: ${({ buttonsVisible }) =>\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\n\n  top: ${({ cellSize, currentRowIndex }) =>\n    cellSize * currentRowIndex + 2 * currentRowIndex}px;\n  right: 100%;\n  margin: 3px 2px;\n`;\n\nconst RemoveColumnButton = styled(RemoveButtons)`\n  visibility: ${({ buttonsVisible }) =>\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\n\n  bottom: 100%;\n  left: ${({ cellSize, currentCellIndex }) =>\n    cellSize * currentCellIndex + 2 * currentCellIndex}px;\n  margin: 2px 3px;\n`;\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      columns: [],\n\n      containerPosition: {\n        left: `${this.props.cellSize * 2}px`,\n        top: `${this.props.cellSize * 2}px`\n      },\n\n      currentCellIndex: 0,\n      currentRowIndex: 0,\n\n      buttonsVisible: false,\n      removeRowButtonDisplay: true,\n      removeColumnButtonDisplay: true,\n\n      dragging: false\n    };\n\n    this.containerRef = React.createRef();\n\n    this.uniqueKey = 0;\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    this.createSquare();\n    document.addEventListener(\"mousemove\", event => this.onDragging(event));\n    document.addEventListener(\"mouseup\", () => this.onDragEnd());\n  }\n\n  createSquare = () => {\n    const newRows = [];\n    const newColumns = [];\n\n    const { initialHeight, initialWidth } = this.props;\n\n    for (let cells = 0; cells < initialWidth; cells++) {\n      newColumns[cells] = this.uniqueKey++;\n    }\n\n    for (let rows = 0; rows < initialHeight; rows++) {\n      newRows[rows] = this.uniqueKey++;\n    }\n\n    this.setState({\n      rows: newRows,\n      columns: newColumns\n    });\n  };\n\n  throttle = (func, ms) => {\n    let isThrottled = false,\n      savedArgs,\n      savedThis;\n\n    function wrapper() {\n      if (isThrottled) {\n        savedArgs = arguments;\n        savedThis = this;\n        return;\n      }\n\n      func.apply(this, arguments);\n\n      isThrottled = true;\n\n      setTimeout(function() {\n        isThrottled = false;\n        if (savedArgs) {\n          wrapper.apply(savedThis, savedArgs);\n          savedArgs = savedThis = null;\n        }\n      }, ms);\n    }\n\n    return wrapper;\n  };\n\n  onDragStart = ({ clientX, clientY }) => {\n    this.offsetX =\n      clientX - this.containerRef.current.getBoundingClientRect().left;\n    this.offsetY =\n      clientY - this.containerRef.current.getBoundingClientRect().top;\n\n    this.setState({\n      dragging: true\n    });\n  };\n\n  onDragging = ({ pageX, pageY }) => {\n    const { dragging } = this.state;\n\n    if (dragging) {\n      this.containerRef.current.style.left = pageX - this.offsetX + \"px\";\n      this.containerRef.current.style.top = pageY - this.offsetY + \"px\";\n      this.containerRef.current.style.margin = 0;\n    }\n  };\n\n  onDragEnd = () => {\n    this.setState({\n      dragging: false\n    });\n  };\n\n  movingButtons = ({ target }) => {\n    if (target.tagName === \"TD\") {\n      this.setState({\n        currentCellIndex: target.cellIndex,\n        currentRowIndex: target.parentNode.rowIndex\n      });\n    }\n  };\n\n  createColumn = () => {\n    const { columns } = this.state;\n    const cloneColumns = [...columns, this.uniqueKey++];\n\n    this.setState({\n      columns: cloneColumns\n    });\n  };\n\n  createRow = () => {\n    const { rows } = this.state;\n    const cloneRows = [...rows, this.uniqueKey++];\n\n    this.setState({\n      rows: cloneRows\n    });\n  };\n\n  deleteColumn = () => {\n    const { currentCellIndex, columns } = this.state;\n    const lastCellIndex = columns.length - 1;\n\n    if (columns.length > 1) {\n      this.setState({\n        columns: columns.filter((column, index) => index !== currentCellIndex)\n      });\n    }\n\n    if (currentCellIndex === lastCellIndex) {\n      this.setState(prevState => ({\n        currentCellIndex: prevState.currentCellIndex - 1\n      }));\n    }\n\n    if (lastCellIndex <= 1) {\n      this.setState({\n        removeColumnButtonDisplay: false\n      });\n    }\n  };\n\n  deleteRow = () => {\n    const { currentRowIndex, rows } = this.state;\n    const lastRowIndex = rows.length - 1;\n\n    if (rows.length > 1) {\n      this.setState({\n        rows: rows.filter((row, index) => index !== currentRowIndex)\n      });\n    }\n\n    if (currentRowIndex === lastRowIndex) {\n      this.setState(prevState => ({\n        currentRowIndex: prevState.currentRowIndex - 1\n      }));\n    }\n\n    if (lastRowIndex <= 1) {\n      this.setState({\n        removeRowButtonDisplay: false\n      });\n    }\n  };\n\n  showButtons = () => {\n    const { rows, columns } = this.state;\n\n    if (rows.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeRowButtonDisplay: true\n      });\n    }\n\n    if (columns.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeColumnButtonDisplay: true\n      });\n    }\n  };\n\n  hideButtons = () => {\n    this.setState({\n      buttonsVisible: false\n    });\n  };\n\n  render() {\n    const { cellSize } = this.props;\n\n    const {\n      rows,\n      columns,\n      buttonsVisible,\n      removeRowButtonDisplay,\n      removeColumnButtonDisplay,\n      currentRowIndex,\n      currentCellIndex\n    } = this.state;\n\n    return (\n      <Container\n        ref={this.containerRef}\n        currentRowIndex={currentRowIndex}\n        currentCellIndex={currentCellIndex}\n        cellSize={cellSize}\n        onMouseOver={this.movingButtons}\n      >\n        <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\n          <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\n            <tbody>\n              {rows.map(row => (\n                <tr key={`row-${row}`} id=\"row\">\n                  {columns.map(cell => (\n                    <Cell key={`cell-${cell}`} id=\"cell\" cellSize={cellSize} />\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n          {removeRowButtonDisplay && (\n            <RemoveRowButton\n              id=\"remove-row-button\"\n              onClick={this.deleteRow}\n              cellSize={cellSize}\n              currentRowIndex={currentRowIndex}\n              buttonsVisible={buttonsVisible}\n            >\n              -\n            </RemoveRowButton>\n          )}\n\n          {removeColumnButtonDisplay && (\n            <RemoveColumnButton\n              id=\"remove-column-button\"\n              onClick={this.deleteColumn}\n              cellSize={cellSize}\n              currentCellIndex={currentCellIndex}\n              buttonsVisible={buttonsVisible}\n            >\n              -\n            </RemoveColumnButton>\n          )}\n        </div>\n        <AddRowButton\n          id=\"add-row-button\"\n          cellSize={cellSize}\n          onClick={this.createRow}\n        >\n          +\n        </AddRowButton>\n        <AddColumnButton\n          id=\"add-column-button\"\n          cellSize={cellSize}\n          onClick={this.createColumn}\n        >\n          +\n        </AddColumnButton>\n      </Container>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  cellSize: 50,\n  initialHeight: 4,\n  initialWidth: 4\n};\n\nSquare.propTypes = {\n  cellSize: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport Square from \"../Square\";\n\nfunction App() {\n  return <Square initialWidth={4} initialHeight={4} cellSize={50} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}