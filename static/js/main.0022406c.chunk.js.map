{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Wrapper","styled","div","Container","props","containerPosition","left","top","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","removeRowButtonDisplay","buttonsVisible","removeRowButtonTop","RemoveColumnButton","removeColumnButtonDisplay","removeColumnButtonLeft","Square","throttle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","createSquare","state","rows","columns","cloneRows","cloneColumns","initialHeight","initialWidth","cells","key","cellKey","rowKey","setState","onDragStart","clientX","clientY","offsetX","containerRef","current","getBoundingClientRect","offsetY","dragging","onDragging","event","console","log","target","container","style","pageX","pageY","onDrag","e","persist","onDragEnd","containerStyle","cloneContainerPosition","removeAttribute","movingButtons","currentRowIndex","currentCellIndex","tagName","offsetLeft","offsetTop","cellIndex","parentNode","rowIndex","createColumn","createRow","deleteColumn","columnsLength","length","lastCellIndex","splice","deleteRow","rowsLength","lastRowIndex","showButtons","hideButtons","square","React","createRef","document","querySelector","onMouseMove","onMouseUp","id","ref","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","row","cell","onClick","Component","defaultProps","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0022406c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n\n  margin: 0;\n  padding: 0;\n\n  user-select: none;\n`;\n\nconst Container = styled.div`\n  display: inline-block;\n\n  position: absolute;\n\n  left: ${props => props.containerPosition.left};\n  top: ${props => props.containerPosition.top};\n\n  user-select: none;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #48aae6;\n  cursor: grab;\n  user-select: none;\n`;\n\nconst Cell = styled.td`\n  height: ${props => props.cellSize}px;\n  width: ${props => props.cellSize}px;\n\n  padding: 0;\n\n  background-color: #48aae6;\n\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n\n  height: ${props => props.cellSize}px;\n  width: ${props => props.cellSize}px;\n  margin: 2px;\n\n  color: #ffffff;\n\n  font-size: ${props => props.cellSize / 2}px;\n  font-weight: bold;\n  text-align: center;\n\n  opacity: 1;\n\n  transition-duration: 0.6s;\n  cursor: pointer;\n\n  user-select: none;\n\n  &:hover {\n    opacity: 0.8;\n    transition-duration: 0.5s;\n  }\n`;\n\nconst AddButtons = styled(Button)`\n  background-color: #f3a500;\n`;\n\nconst RemoveButtons = styled(Button)`\n  display: block;\n  visibility: hidden;\n\n  background-color: #b20000;\n\n  line-height: ${props => props.cellSize - props.cellSize / 5}px;\n`;\n\nconst AddRowButton = styled(AddButtons)`\n  top: 100%;\n  left: 1px;\n`;\n\nconst AddColumnButton = styled(AddButtons)`\n  top: 1px;\n  left: 100%;\n`;\n\nconst RemoveRowButton = styled(RemoveButtons)`\n  display: ${props =>\n    props.removeRowButtonDisplay === true ? \"block\" : \"none\"};\n  visibility: ${props =>\n    props.buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${props => (props.buttonsVisible === true ? 1 : 0)};\n\n  top: ${props => props.removeRowButtonTop}px;\n  right: 100%;\n\n  margin: 1px 2px;\n`;\n\nconst RemoveColumnButton = styled(RemoveButtons)`\n  display: ${props =>\n    props.removeColumnButtonDisplay === true ? \"block\" : \"none\"};\n  visibility: ${props =>\n    props.buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${props => (props.buttonsVisible === true ? 1 : 0)};\n\n  bottom: 100%;\n  left: ${props => props.removeColumnButtonLeft}px;\n\n  margin: 2px 1px;\n`;\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      square: [],\n\n      rows: [],\n      columns: [],\n\n      rowKey: 0,\n      cellKey: 0,\n\n      containerPosition: {\n        left: `${this.props.cellSize * 2}px`,\n        top: `${this.props.cellSize * 2}px`\n      },\n\n      currentCellIndex: 0,\n      currentRowIndex: 0,\n\n      buttonsVisible: false,\n      removeRowButtonDisplay: true,\n      removeColumnButtonDisplay: true,\n\n      removeRowButtonTop: 0,\n      removeColumnButtonLeft: 0,\n\n      dragging: false\n    };\n\n    this.rowKey = 0;\n    this.cellKey = 0;\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n\n    this.onDragging = this.throttle(this.onDragging, 20);\n    this.containerRef = React.createRef();\n  }\n\n  throttle = (func, ms) => {\n    let isThrottled = false,\n      savedArgs,\n      savedThis;\n\n    function wrapper() {\n      if (isThrottled) {\n        savedArgs = arguments;\n        savedThis = this;\n        return;\n      }\n\n      func.apply(this, arguments);\n\n      isThrottled = true;\n\n      setTimeout(function() {\n        isThrottled = false;\n        if (savedArgs) {\n          wrapper.apply(savedThis, savedArgs);\n          savedArgs = savedThis = null;\n        }\n      }, ms);\n    }\n\n    return wrapper;\n  };\n\n  componentDidMount() {\n    this.createSquare();\n    this.container = document.querySelector(\"#container\");\n  }\n\n  createSquare = () => {\n    const { rows, columns } = this.state;\n    const cloneRows = [...rows];\n    const cloneColumns = [...columns];\n\n    const { initialHeight, initialWidth } = this.props;\n\n    for (let cells = 0; cells < initialWidth; cells++) {\n      cloneColumns[cells] = {\n        key: this.cellKey++\n      };\n    }\n\n    for (let rows = 0; rows < initialHeight; rows++) {\n      cloneRows[rows] = {\n        key: this.rowKey++,\n        columns: cloneColumns\n      };\n    }\n\n    this.setState({\n      rows: cloneRows,\n      columns: cloneColumns\n    });\n  };\n\n  onDragStart = ({ clientX, clientY }) => {\n    this.offsetX =\n      clientX - this.containerRef.current.getBoundingClientRect().left;\n    this.offsetY =\n      clientY - this.containerRef.current.getBoundingClientRect().top;\n\n    this.setState({\n      dragging: true\n    });\n  };\n\n  onDragging = event => {\n    const { dragging } = this.state;\n    console.log(event.target);\n\n    if (dragging) {\n      this.container.style.left = event.pageX - this.offsetX + \"px\";\n      this.container.style.top = event.pageY - this.offsetY + \"px\";\n    }\n  };\n\n  onDrag = e => {\n    e.persist();\n    this.onDragging(e);\n  };\n\n  onDragEnd = () => {\n    const container = this.container;\n    const containerStyle = container.style;\n\n    const cloneContainerPosition = { ...this.state.containerPosition };\n    cloneContainerPosition.left = containerStyle.left;\n    cloneContainerPosition.top = containerStyle.top;\n\n    if (containerStyle.left && containerStyle.top) {\n      this.setState({\n        containerPosition: cloneContainerPosition\n      });\n      container.removeAttribute(\"style\");\n    }\n\n    this.setState({\n      dragging: false\n    });\n  };\n\n  movingButtons = ({ target }) => {\n    let {\n      currentRowIndex,\n      currentCellIndex,\n      removeColumnButtonLeft,\n      removeRowButtonTop\n    } = this.state;\n\n    if (target.tagName === \"TD\") {\n      removeColumnButtonLeft = target.offsetLeft;\n      removeRowButtonTop = target.offsetTop;\n      currentCellIndex = target.cellIndex;\n      currentRowIndex = target.parentNode.rowIndex;\n    }\n\n    this.setState({\n      currentRowIndex,\n      currentCellIndex,\n      removeColumnButtonLeft,\n      removeRowButtonTop\n    });\n  };\n\n  createColumn = () => {\n    const { columns } = this.state;\n    const cloneColumns = [...columns, { key: this.cellKey++ }];\n\n    this.setState({\n      columns: cloneColumns\n    });\n  };\n\n  createRow = () => {\n    const { rows, columns } = this.state;\n    const cloneColumns = [...columns];\n    const cloneRows = [...rows, { key: this.rowKey++, columns: cloneColumns }];\n\n    this.setState({\n      rows: cloneRows\n    });\n  };\n\n  deleteColumn = () => {\n    const { cellSize } = this.props;\n    const { rows, columns } = this.state;\n    let { currentCellIndex, removeColumnButtonLeft } = this.state;\n\n    const cloneRows = [...rows];\n    const cloneColumns = [...columns];\n\n    const columnsLength = cloneColumns.length;\n    const lastCellIndex = columnsLength - 1;\n\n    if (columnsLength > 1) {\n      cloneColumns.splice(currentCellIndex, 1);\n    }\n\n    if (currentCellIndex === lastCellIndex) {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n      of the button should be considered when calculating */\n      removeColumnButtonLeft =\n        cellSize * (currentCellIndex - 1) + 2 * currentCellIndex;\n\n      currentCellIndex--;\n    }\n\n    if (lastCellIndex <= 1) {\n      this.setState({\n        removeColumnButtonDisplay: false\n      });\n    }\n\n    this.setState({\n      rows: cloneRows,\n      columns: cloneColumns,\n      removeColumnButtonLeft,\n      currentCellIndex\n    });\n  };\n\n  deleteRow = () => {\n    const { cellSize } = this.props;\n    const { rows } = this.state;\n    let { currentRowIndex, removeRowButtonTop } = this.state;\n\n    const cloneRows = [...rows];\n\n    const rowsLength = cloneRows.length;\n    const lastRowIndex = rowsLength - 1;\n\n    if (rowsLength > 1) {\n      cloneRows.splice(currentRowIndex, 1);\n    }\n\n    if (currentRowIndex === lastRowIndex) {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n    of the button should be considered when calculating */\n      removeRowButtonTop =\n        cellSize * (currentRowIndex - 1) + 2 * currentRowIndex;\n\n      currentRowIndex--;\n    }\n\n    if (lastRowIndex <= 1) {\n      this.setState({\n        removeRowButtonDisplay: false\n      });\n    }\n\n    this.setState({\n      rows: cloneRows,\n      removeRowButtonTop,\n      currentRowIndex\n    });\n  };\n\n  showButtons = () => {\n    const { rows, columns } = this.state;\n\n    if (rows.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeRowButtonDisplay: true\n      });\n    }\n\n    if (columns.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeColumnButtonDisplay: true\n      });\n    }\n  };\n\n  hideButtons = () => {\n    this.setState({\n      buttonsVisible: false\n    });\n  };\n\n  render() {\n    const { cellSize } = this.props;\n\n    const {\n      rows,\n      columns,\n      buttonsVisible,\n      removeRowButtonDisplay,\n      removeColumnButtonDisplay,\n      removeRowButtonTop,\n      removeColumnButtonLeft,\n      containerPosition\n    } = this.state;\n\n    return (\n      <Wrapper onMouseMove={this.onDrag} onMouseUp={this.onDragEnd}>\n        <Container\n          id={\"container\"}\n          ref={this.containerRef}\n          containerPosition={containerPosition}\n          cellSize={cellSize}\n          onMouseOver={this.movingButtons}\n        >\n          <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\n            <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\n              <tbody>\n                {rows.map(row => (\n                  <tr key={`row-${row.key}`}>\n                    {columns.map(cell => (\n                      <Cell key={`cell-${cell.key}`} cellSize={cellSize} />\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            <RemoveRowButton\n              onClick={this.deleteRow}\n              cellSize={cellSize}\n              buttonsVisible={buttonsVisible}\n              removeRowButtonDisplay={removeRowButtonDisplay}\n              removeRowButtonTop={removeRowButtonTop}\n            >\n              -\n            </RemoveRowButton>\n            <RemoveColumnButton\n              onClick={this.deleteColumn}\n              cellSize={cellSize}\n              buttonsVisible={buttonsVisible}\n              removeColumnButtonDisplay={removeColumnButtonDisplay}\n              removeColumnButtonLeft={removeColumnButtonLeft}\n            >\n              -\n            </RemoveColumnButton>\n          </div>\n          <AddRowButton cellSize={cellSize} onClick={this.createRow}>\n            +\n          </AddRowButton>\n          <AddColumnButton cellSize={cellSize} onClick={this.createColumn}>\n            +\n          </AddColumnButton>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  cellSize: 50,\n  initialHeight: 4,\n  initialWidth: 4\n};\n\nSquare.propTypes = {\n  cellSize: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport Square from \"../Square\";\n\nfunction App() {\n  return <Square initialWidth={4} initialHeight={4} cellSize={50} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}