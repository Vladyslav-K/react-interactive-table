{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Wrapper","styled","div","Container","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","buttonsVisible","currentRowIndex","RemoveColumnButton","currentCellIndex","Square","props","createSquare","newRows","newColumns","initialHeight","initialWidth","cells","uniqueKey","rows","setState","columns","throttle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","onDragStart","clientX","clientY","offsetX","containerRef","current","getBoundingClientRect","left","offsetY","top","dragging","onDragging","pageX","pageY","state","style","onDragEnd","movingButtons","target","tagName","cellIndex","parentNode","rowIndex","createColumn","cloneColumns","createRow","cloneRows","deleteColumn","lastCellIndex","length","filter","column","index","prevState","removeColumnButtonDisplay","deleteRow","lastRowIndex","row","removeRowButtonDisplay","showButtons","hideButtons","React","createRef","document","addEventListener","event","ref","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","key","id","cell","onClick","Component","defaultProps","GlobalContainer","App","ReactDOM","render","getElementById"],"mappings":"+jEAIA,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAYF,IAAOC,IAAV,KAKTE,EAAQH,IAAOI,MAAV,KAMLC,EAAOL,IAAOM,GAAV,KACE,qBAAGC,YACJ,qBAAGA,YASRC,EAASR,IAAOC,IAAV,KAMA,qBAAGM,YACJ,qBAAGA,YAKC,qBAAGA,SAA0B,KAiBtCE,EAAaT,YAAOQ,EAAPR,CAAH,KAIVU,EAAgBV,YAAOQ,EAAPR,CAAH,KAMF,gBAAGO,EAAH,EAAGA,SAAH,OAAkBA,EAAWA,EAAW,KAGnDI,EAAeX,YAAOS,EAAPT,CAAH,KAKZY,EAAkBZ,YAAOS,EAAPT,CAAH,KAKfa,EAAkBb,YAAOU,EAAPV,CAAH,KACL,mBACO,IADP,EAAGc,eACW,UAAY,YAC7B,mBAA4C,IAA5C,EAAGA,eAAgD,EAAI,KAE3D,gBAAGP,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,gBAAb,OACLR,EAAWQ,EAAkB,EAAIA,KAK/BC,EAAqBhB,YAAOU,EAAPV,CAAH,KACR,mBACO,IADP,EAAGc,eACW,UAAY,YAC7B,mBAA4C,IAA5C,EAAGA,eAAgD,EAAI,KAG1D,gBAAGP,EAAH,EAAGA,SAAUU,EAAb,EAAaA,iBAAb,OACNV,EAAWU,EAAmB,EAAIA,KAIjBC,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KA8BRC,aAAe,WAMb,IALA,IAAMC,EAAU,GACVC,EAAa,GAFA,EAIqB,EAAKH,MAArCI,EAJW,EAIXA,cAAeC,EAJJ,EAIIA,aAEdC,EAAQ,EAAGA,EAAQD,EAAcC,IACxCH,EAAWG,GAAS,EAAKC,YAG3B,IAAK,IAAIC,EAAO,EAAGA,EAAOJ,EAAeI,IACvCN,EAAQM,GAAQ,EAAKD,YAGvB,EAAKE,SAAS,CACZD,KAAMN,EACNQ,QAASP,KA/CM,EAmDnBQ,SAAW,SAACC,EAAMC,GAChB,IACEC,EACAC,EAFEC,GAAc,EAwBlB,OApBA,SAASC,IACP,GAAID,EAGF,OAFAF,EAAYI,eACZH,EAAYI,MAIdP,EAAKQ,MAAMD,KAAMD,WAEjBF,GAAc,EAEdK,YAAW,WACTL,GAAc,EACVF,IACFG,EAAQG,MAAML,EAAWD,GACzBA,EAAYC,EAAY,QAEzBF,KAzEY,EA+EnBS,YAAc,YAA2B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACxB,EAAKC,QACHF,EAAU,EAAKG,aAAaC,QAAQC,wBAAwBC,KAC9D,EAAKC,QACHN,EAAU,EAAKE,aAAaC,QAAQC,wBAAwBG,IAE9D,EAAKtB,SAAS,CACZuB,UAAU,KAtFK,EA0FnBC,WAAa,YAAuB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACA,EAAKC,MAAlBJ,WAGN,EAAKN,aAAaC,QAAQU,MAAMR,KAAOK,EAAQ,EAAKT,QAAU,KAC9D,EAAKC,aAAaC,QAAQU,MAAMN,IAAMI,EAAQ,EAAKL,QAAU,OA/F9C,EAmGnBQ,UAAY,WACV,EAAK7B,SAAS,CACZuB,UAAU,KArGK,EAyGnBO,cAAgB,YAAiB,IAAdC,EAAa,EAAbA,OACM,OAAnBA,EAAOC,SACT,EAAKhC,SAAS,CACZX,iBAAkB0C,EAAOE,UACzB9C,gBAAiB4C,EAAOG,WAAWC,YA7GtB,EAkHnBC,aAAe,WAAO,IACZnC,EAAY,EAAK0B,MAAjB1B,QACFoC,EAAY,sBAAOpC,GAAP,CAAgB,EAAKH,cAEvC,EAAKE,SAAS,CACZC,QAASoC,KAvHM,EA2HnBC,UAAY,WAAO,IACTvC,EAAS,EAAK4B,MAAd5B,KACFwC,EAAS,sBAAOxC,GAAP,CAAa,EAAKD,cAEjC,EAAKE,SAAS,CACZD,KAAMwC,KAhIS,EAoInBC,aAAe,WAAO,IAAD,EACmB,EAAKb,MAAnCtC,EADW,EACXA,iBAAkBY,EADP,EACOA,QACpBwC,EAAgBxC,EAAQyC,OAAS,EAEnCzC,EAAQyC,OAAS,GACnB,EAAK1C,SAAS,CACZC,QAASA,EAAQ0C,QAAO,SAACC,EAAQC,GAAT,OAAmBA,IAAUxD,OAIrDA,IAAqBoD,GACvB,EAAKzC,UAAS,SAAA8C,GAAS,MAAK,CAC1BzD,iBAAkByD,EAAUzD,iBAAmB,MAI/CoD,GAAiB,GACnB,EAAKzC,SAAS,CACZ+C,2BAA2B,KAtJd,EA2JnBC,UAAY,WAAO,IAAD,EACkB,EAAKrB,MAA/BxC,EADQ,EACRA,gBAAiBY,EADT,EACSA,KACnBkD,EAAelD,EAAK2C,OAAS,EAE/B3C,EAAK2C,OAAS,GAChB,EAAK1C,SAAS,CACZD,KAAMA,EAAK4C,QAAO,SAACO,EAAKL,GAAN,OAAgBA,IAAU1D,OAI5CA,IAAoB8D,GACtB,EAAKjD,UAAS,SAAA8C,GAAS,MAAK,CAC1B3D,gBAAiB2D,EAAU3D,gBAAkB,MAI7C8D,GAAgB,GAClB,EAAKjD,SAAS,CACZmD,wBAAwB,KA7KX,EAkLnBC,YAAc,WAAO,IAAD,EACQ,EAAKzB,MAAvB5B,EADU,EACVA,KAAME,EADI,EACJA,QAEVF,EAAK2C,OAAS,GAChB,EAAK1C,SAAS,CACZd,gBAAgB,EAChBiE,wBAAwB,IAIxBlD,EAAQyC,OAAS,GACnB,EAAK1C,SAAS,CACZd,gBAAgB,EAChB6D,2BAA2B,KA/Ld,EAoMnBM,YAAc,WACZ,EAAKrD,SAAS,CACZd,gBAAgB,KAnMlB,EAAKyC,MAAQ,CACX5B,KAAM,GACNE,QAAS,GAETZ,iBAAkB,EAClBF,gBAAiB,EAEjBD,gBAAgB,EAChBiE,wBAAwB,EACxBJ,2BAA2B,EAE3BxB,UAAU,GAGZ,EAAKN,aAAeqC,IAAMC,YAE1B,EAAKzD,UAAY,EAEjB,EAAKkB,QAAU,EACf,EAAKK,QAAU,EAtBE,E,iFAyBE,IAAD,OAClBX,KAAKlB,eACLgE,SAASC,iBAAiB,aAAa,SAAAC,GAAK,OAAI,EAAKlC,WAAWkC,MAChEF,SAASC,iBAAiB,WAAW,kBAAM,EAAK5B,iB,+BA8KxC,IACAlD,EAAa+B,KAAKnB,MAAlBZ,SADD,EAWH+B,KAAKiB,MAPP5B,EAJK,EAILA,KACAE,EALK,EAKLA,QACAf,EANK,EAMLA,eACAiE,EAPK,EAOLA,uBACAJ,EARK,EAQLA,0BACA5D,EATK,EASLA,gBACAE,EAVK,EAULA,iBAGF,OACE,kBAAClB,EAAD,KACE,kBAACG,EAAD,CAAWqF,IAAKjD,KAAKO,aAAc2C,YAAalD,KAAKoB,eACnD,yBAAK+B,aAAcnD,KAAK0C,YAAaU,aAAcpD,KAAK2C,aACtD,kBAAC9E,EAAD,CAAOwF,YAAarD,KAAKG,YAAaA,YAAa,kBAAM,IACvD,+BACGd,EAAKiE,KAAI,SAAAd,GAAG,OACX,wBAAIe,IAAG,cAASf,GAAOgB,GAAG,OACvBjE,EAAQ+D,KAAI,SAAAG,GAAI,OACf,kBAAC1F,EAAD,CACEwF,IAAG,eAAUE,GACbD,GAAG,OACHvF,SAAUA,aAQrBwE,GACC,kBAAClE,EAAD,CACEiF,GAAG,oBACHE,QAAS1D,KAAKsC,UACdrE,SAAUA,EACVQ,gBAAiBA,EACjBD,eAAgBA,GALlB,KAWD6D,GACC,kBAAC3D,EAAD,CACE8E,GAAG,uBACHE,QAAS1D,KAAK8B,aACd7D,SAAUA,EACVU,iBAAkBA,EAClBH,eAAgBA,GALlB,MAWJ,kBAACH,EAAD,CACEmF,GAAG,iBACHvF,SAAUA,EACVyF,QAAS1D,KAAK4B,WAHhB,KAOA,kBAACtD,EAAD,CACEkF,GAAG,oBACHvF,SAAUA,EACVyF,QAAS1D,KAAK0B,cAHhB,W,GA3Q0BkB,IAAMe,W,kJAwR1C/E,EAAOgF,aAAe,CACpB3F,SAAU,GACVgB,cAAe,EACfC,aAAc,GClYhB,IAAM2E,EAAkBnG,IAAOC,IAAV,KAeNmG,MATf,WACE,OACE,kBAACD,EAAD,KACE,kBAAC,EAAD,CAAQ3E,aAAc,EAAGD,cAAe,EAAGhB,SAAU,KACrD,kBAAC,EAAD,CAAQiB,aAAc,EAAGD,cAAe,EAAGhB,SAAU,OCV3D8F,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASmB,eAAe,W","file":"static/js/main.c892d2d0.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  user-select: none;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  user-select: none;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #48aae6;\n  cursor: grab;\n  user-select: none;\n`;\n\nconst Cell = styled.td`\n  height: ${({ cellSize }) => cellSize}px;\n  width: ${({ cellSize }) => cellSize}px;\n\n  padding: 0;\n\n  background-color: #48aae6;\n\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n\n  height: ${({ cellSize }) => cellSize}px;\n  width: ${({ cellSize }) => cellSize}px;\n  margin: 2px;\n\n  color: #ffffff;\n\n  font-size: ${({ cellSize }) => cellSize / 2}px;\n  font-weight: bold;\n  text-align: center;\n\n  opacity: 1;\n\n  transition-duration: 0.6s;\n  cursor: pointer;\n\n  user-select: none;\n\n  &:hover {\n    opacity: 0.8;\n    transition-duration: 0.5s;\n  }\n`;\n\nconst AddButtons = styled(Button)`\n  background-color: #f3a500;\n`;\n\nconst RemoveButtons = styled(Button)`\n  visibility: hidden;\n  opacity: 0;\n\n  background-color: #b20000;\n\n  line-height: ${({ cellSize }) => cellSize - cellSize / 5}px;\n`;\n\nconst AddRowButton = styled(AddButtons)`\n  top: 100%;\n  left: 1px;\n`;\n\nconst AddColumnButton = styled(AddButtons)`\n  top: 1px;\n  left: 100%;\n`;\n\nconst RemoveRowButton = styled(RemoveButtons)`\n  visibility: ${({ buttonsVisible }) =>\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\n\n  top: ${({ cellSize, currentRowIndex }) =>\n    cellSize * currentRowIndex + 2 * currentRowIndex}px;\n  right: 100%;\n  margin: 3px 2px;\n`;\n\nconst RemoveColumnButton = styled(RemoveButtons)`\n  visibility: ${({ buttonsVisible }) =>\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\n\n  bottom: 100%;\n  left: ${({ cellSize, currentCellIndex }) =>\n    cellSize * currentCellIndex + 2 * currentCellIndex}px;\n  margin: 2px 3px;\n`;\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      columns: [],\n\n      currentCellIndex: 0,\n      currentRowIndex: 0,\n\n      buttonsVisible: false,\n      removeRowButtonDisplay: true,\n      removeColumnButtonDisplay: true,\n\n      dragging: false\n    };\n\n    this.containerRef = React.createRef();\n\n    this.uniqueKey = 0;\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    this.createSquare();\n    document.addEventListener(\"mousemove\", event => this.onDragging(event));\n    document.addEventListener(\"mouseup\", () => this.onDragEnd());\n  }\n\n  createSquare = () => {\n    const newRows = [];\n    const newColumns = [];\n\n    const { initialHeight, initialWidth } = this.props;\n\n    for (let cells = 0; cells < initialWidth; cells++) {\n      newColumns[cells] = this.uniqueKey++;\n    }\n\n    for (let rows = 0; rows < initialHeight; rows++) {\n      newRows[rows] = this.uniqueKey++;\n    }\n\n    this.setState({\n      rows: newRows,\n      columns: newColumns\n    });\n  };\n\n  throttle = (func, ms) => {\n    let isThrottled = false,\n      savedArgs,\n      savedThis;\n\n    function wrapper() {\n      if (isThrottled) {\n        savedArgs = arguments;\n        savedThis = this;\n        return;\n      }\n\n      func.apply(this, arguments);\n\n      isThrottled = true;\n\n      setTimeout(function() {\n        isThrottled = false;\n        if (savedArgs) {\n          wrapper.apply(savedThis, savedArgs);\n          savedArgs = savedThis = null;\n        }\n      }, ms);\n    }\n\n    return wrapper;\n  };\n\n  onDragStart = ({ clientX, clientY }) => {\n    this.offsetX =\n      clientX - this.containerRef.current.getBoundingClientRect().left;\n    this.offsetY =\n      clientY - this.containerRef.current.getBoundingClientRect().top;\n\n    this.setState({\n      dragging: true\n    });\n  };\n\n  onDragging = ({ pageX, pageY }) => {\n    const { dragging } = this.state;\n\n    if (dragging) {\n      this.containerRef.current.style.left = pageX - this.offsetX + \"px\";\n      this.containerRef.current.style.top = pageY - this.offsetY + \"px\";\n    }\n  };\n\n  onDragEnd = () => {\n    this.setState({\n      dragging: false\n    });\n  };\n\n  movingButtons = ({ target }) => {\n    if (target.tagName === \"TD\") {\n      this.setState({\n        currentCellIndex: target.cellIndex,\n        currentRowIndex: target.parentNode.rowIndex\n      });\n    }\n  };\n\n  createColumn = () => {\n    const { columns } = this.state;\n    const cloneColumns = [...columns, this.uniqueKey++];\n\n    this.setState({\n      columns: cloneColumns\n    });\n  };\n\n  createRow = () => {\n    const { rows } = this.state;\n    const cloneRows = [...rows, this.uniqueKey++];\n\n    this.setState({\n      rows: cloneRows\n    });\n  };\n\n  deleteColumn = () => {\n    const { currentCellIndex, columns } = this.state;\n    const lastCellIndex = columns.length - 1;\n\n    if (columns.length > 1) {\n      this.setState({\n        columns: columns.filter((column, index) => index !== currentCellIndex)\n      });\n    }\n\n    if (currentCellIndex === lastCellIndex) {\n      this.setState(prevState => ({\n        currentCellIndex: prevState.currentCellIndex - 1\n      }));\n    }\n\n    if (lastCellIndex <= 1) {\n      this.setState({\n        removeColumnButtonDisplay: false\n      });\n    }\n  };\n\n  deleteRow = () => {\n    const { currentRowIndex, rows } = this.state;\n    const lastRowIndex = rows.length - 1;\n\n    if (rows.length > 1) {\n      this.setState({\n        rows: rows.filter((row, index) => index !== currentRowIndex)\n      });\n    }\n\n    if (currentRowIndex === lastRowIndex) {\n      this.setState(prevState => ({\n        currentRowIndex: prevState.currentRowIndex - 1\n      }));\n    }\n\n    if (lastRowIndex <= 1) {\n      this.setState({\n        removeRowButtonDisplay: false\n      });\n    }\n  };\n\n  showButtons = () => {\n    const { rows, columns } = this.state;\n\n    if (rows.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeRowButtonDisplay: true\n      });\n    }\n\n    if (columns.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeColumnButtonDisplay: true\n      });\n    }\n  };\n\n  hideButtons = () => {\n    this.setState({\n      buttonsVisible: false\n    });\n  };\n\n  render() {\n    const { cellSize } = this.props;\n\n    const {\n      rows,\n      columns,\n      buttonsVisible,\n      removeRowButtonDisplay,\n      removeColumnButtonDisplay,\n      currentRowIndex,\n      currentCellIndex\n    } = this.state;\n\n    return (\n      <Wrapper>\n        <Container ref={this.containerRef} onMouseOver={this.movingButtons}>\n          <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\n            <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\n              <tbody>\n                {rows.map(row => (\n                  <tr key={`row-${row}`} id=\"row\">\n                    {columns.map(cell => (\n                      <Cell\n                        key={`cell-${cell}`}\n                        id=\"cell\"\n                        cellSize={cellSize}\n                      />\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            {removeRowButtonDisplay && (\n              <RemoveRowButton\n                id=\"remove-row-button\"\n                onClick={this.deleteRow}\n                cellSize={cellSize}\n                currentRowIndex={currentRowIndex}\n                buttonsVisible={buttonsVisible}\n              >\n                -\n              </RemoveRowButton>\n            )}\n\n            {removeColumnButtonDisplay && (\n              <RemoveColumnButton\n                id=\"remove-column-button\"\n                onClick={this.deleteColumn}\n                cellSize={cellSize}\n                currentCellIndex={currentCellIndex}\n                buttonsVisible={buttonsVisible}\n              >\n                -\n              </RemoveColumnButton>\n            )}\n          </div>\n          <AddRowButton\n            id=\"add-row-button\"\n            cellSize={cellSize}\n            onClick={this.createRow}\n          >\n            +\n          </AddRowButton>\n          <AddColumnButton\n            id=\"add-column-button\"\n            cellSize={cellSize}\n            onClick={this.createColumn}\n          >\n            +\n          </AddColumnButton>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  cellSize: 50,\n  initialHeight: 4,\n  initialWidth: 4\n};\n\nSquare.propTypes = {\n  cellSize: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport Square from \"../Square\";\nimport styled from \"styled-components\";\n\nconst GlobalContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding-top: 150px;\n`;\n\nfunction App() {\n  return (\n    <GlobalContainer>\n      <Square initialWidth={4} initialHeight={4} cellSize={50} />\n      <Square initialWidth={4} initialHeight={4} cellSize={50} />\n    </GlobalContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}