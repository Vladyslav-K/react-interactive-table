{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Wrapper","styled","div","Container","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","buttonsVisible","currentRowIndex","RemoveColumnButton","currentCellIndex","Square","props","createSquare","newRows","newColumns","initialHeight","initialWidth","cells","uniqueKey","rows","setState","columns","onDragStart","clientX","clientY","offsetX","containerRef","current","getBoundingClientRect","left","offsetY","top","dragging","onDragging","pageX","pageY","state","style","onDragEnd","movingButtons","target","tagName","cellIndex","parentNode","rowIndex","createColumn","cloneColumns","createRow","cloneRows","deleteColumn","lastCellIndex","length","filter","column","index","prevState","removeColumnButtonDisplay","deleteRow","lastRowIndex","row","removeRowButtonDisplay","showButtons","hideButtons","React","createRef","this","document","addEventListener","event","console","log","ref","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","key","data-test","cell","onClick","Component","GlobalContainer","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.950bca64.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  user-select: none;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  user-select: none;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #48aae6;\n  cursor: grab;\n  user-select: none;\n`;\n\nconst Cell = styled.td`\n  height: ${({ cellSize }) => cellSize}px;\n  min-width: ${({ cellSize }) => cellSize}px;\n  min-height: ${({ cellSize }) => cellSize}px;\n\n  padding: 0;\n\n  background-color: #48aae6;\n\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n\n  height: ${({ cellSize }) => cellSize}px;\n  width: ${({ cellSize }) => cellSize}px;\n  margin: 2px;\n\n  color: #ffffff;\n\n  font-size: ${({ cellSize }) => cellSize / 2}px;\n  font-weight: bold;\n  text-align: center;\n\n  opacity: 1;\n\n  transition-duration: 0.6s;\n  cursor: pointer;\n\n  user-select: none;\n\n  &:hover {\n    opacity: 0.8;\n    transition-duration: 0.5s;\n  }\n`;\n\nconst AddButtons = styled(Button)`\n  background-color: #f3a500;\n`;\n\nconst RemoveButtons = styled(Button)`\n  visibility: hidden;\n  opacity: 0;\n\n  background-color: #b20000;\n`;\n\nconst AddRowButton = styled(AddButtons)`\n  top: 100%;\n  left: 1px;\n`;\n\nconst AddColumnButton = styled(AddButtons)`\n  top: 1px;\n  left: 100%;\n`;\n\nconst RemoveRowButton = styled(RemoveButtons)`\n  visibility: ${({ buttonsVisible }) =>\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\n\n  top: ${({ cellSize, currentRowIndex }) =>\n    cellSize * currentRowIndex + 2 * currentRowIndex}px;\n  right: 100%;\n  margin: 3px 2px;\n`;\n\nconst RemoveColumnButton = styled(RemoveButtons)`\n  visibility: ${({ buttonsVisible }) =>\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\n\n  bottom: 100%;\n  left: ${({ cellSize, currentCellIndex }) =>\n    cellSize * currentCellIndex + 2 * currentCellIndex}px;\n  margin: 2px 3px;\n`;\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      columns: [],\n\n      currentCellIndex: 0,\n      currentRowIndex: 0,\n\n      buttonsVisible: false,\n      removeRowButtonDisplay: true,\n      removeColumnButtonDisplay: true,\n\n      dragging: false\n    };\n\n    this.containerRef = React.createRef();\n\n    this.uniqueKey = 0;\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    this.createSquare();\n    document.addEventListener(\"mousemove\", event => this.onDragging(event));\n    document.addEventListener(\"mouseup\", () => this.onDragEnd());\n    console.log(\"Version [1.1]. Created at 19.11.2019, 00:10.\")\n  }\n\n  createSquare = () => {\n    const newRows = [];\n    const newColumns = [];\n\n    const { initialHeight, initialWidth } = this.props;\n\n    for (let cells = 0; cells < initialWidth; cells++) {\n      newColumns[cells] = this.uniqueKey++;\n    }\n\n    for (let rows = 0; rows < initialHeight; rows++) {\n      newRows[rows] = this.uniqueKey++;\n    }\n\n    this.setState({\n      rows: newRows,\n      columns: newColumns\n    });\n  };\n\n  onDragStart = ({ clientX, clientY }) => {\n    this.offsetX =\n      clientX - this.containerRef.current.getBoundingClientRect().left;\n    this.offsetY =\n      clientY - this.containerRef.current.getBoundingClientRect().top;\n\n    this.setState({\n      dragging: true\n    });\n  };\n\n  onDragging = ({ pageX, pageY }) => {\n    const { dragging } = this.state;\n\n    if (dragging) {\n      this.containerRef.current.style.left = pageX - this.offsetX + \"px\";\n      this.containerRef.current.style.top = pageY - this.offsetY + \"px\";\n    }\n  };\n\n  onDragEnd = () => {\n    this.setState({\n      dragging: false\n    });\n  };\n\n  movingButtons = ({ target }) => {\n    if (target.tagName === \"TD\") {\n      this.setState({\n        currentCellIndex: target.cellIndex,\n        currentRowIndex: target.parentNode.rowIndex\n      });\n    }\n  };\n\n  createColumn = () => {\n    const { columns } = this.state;\n    const cloneColumns = [...columns, this.uniqueKey++];\n\n    this.setState({\n      columns: cloneColumns\n    });\n  };\n\n  createRow = () => {\n    const { rows } = this.state;\n    const cloneRows = [...rows, this.uniqueKey++];\n\n    this.setState({\n      rows: cloneRows\n    });\n  };\n\n  deleteColumn = () => {\n    const { currentCellIndex, columns } = this.state;\n    const lastCellIndex = columns.length - 1;\n\n    if (columns.length > 1) {\n      this.setState({\n        columns: columns.filter((column, index) => index !== currentCellIndex)\n      });\n    }\n\n    if (currentCellIndex === lastCellIndex) {\n      this.setState(prevState => ({\n        currentCellIndex: prevState.currentCellIndex - 1\n      }));\n    }\n\n    if (lastCellIndex <= 1) {\n      this.setState({\n        removeColumnButtonDisplay: false\n      });\n    }\n  };\n\n  deleteRow = () => {\n    const { currentRowIndex, rows } = this.state;\n    const lastRowIndex = rows.length - 1;\n\n    if (rows.length > 1) {\n      this.setState({\n        rows: rows.filter((row, index) => index !== currentRowIndex)\n      });\n    }\n\n    if (currentRowIndex === lastRowIndex) {\n      this.setState(prevState => ({\n        currentRowIndex: prevState.currentRowIndex - 1\n      }));\n    }\n\n    if (lastRowIndex <= 1) {\n      this.setState({\n        removeRowButtonDisplay: false\n      });\n    }\n  };\n\n  showButtons = () => {\n    const { rows, columns } = this.state;\n\n    if (rows.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeRowButtonDisplay: true\n      });\n    }\n\n    if (columns.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeColumnButtonDisplay: true\n      });\n    }\n  };\n\n  hideButtons = () => {\n    this.setState({\n      buttonsVisible: false\n    });\n  };\n\n  render() {\n    const { cellSize } = this.props;\n\n    const {\n      rows,\n      columns,\n      buttonsVisible,\n      removeRowButtonDisplay,\n      removeColumnButtonDisplay,\n      currentRowIndex,\n      currentCellIndex\n    } = this.state;\n\n    return (\n      <Wrapper>\n        <Container ref={this.containerRef} onMouseOver={this.movingButtons}>\n          <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\n            <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\n              <tbody>\n                {rows.map(row => (\n                  <tr key={`row-${row}`} data-test=\"row\">\n                    {columns.map(cell => (\n                      <Cell\n                        data-test=\"cell\"\n                        key={`cell-${cell}`}\n                        cellSize={cellSize}\n                      />\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            {removeRowButtonDisplay && (\n              <RemoveRowButton\n                data-test=\"remove-row-button\"\n                onClick={this.deleteRow}\n                cellSize={cellSize}\n                currentRowIndex={currentRowIndex}\n                buttonsVisible={buttonsVisible}\n              >\n                -\n              </RemoveRowButton>\n            )}\n\n            {removeColumnButtonDisplay && (\n              <RemoveColumnButton\n                data-test=\"remove-column-button\"\n                onClick={this.deleteColumn}\n                cellSize={cellSize}\n                currentCellIndex={currentCellIndex}\n                buttonsVisible={buttonsVisible}\n              >\n                -\n              </RemoveColumnButton>\n            )}\n          </div>\n          <AddRowButton\n            data-test=\"add-row-button\"\n            cellSize={cellSize}\n            onClick={this.createRow}\n          >\n            +\n          </AddRowButton>\n          <AddColumnButton\n            data-test=\"add-column-button\"\n            cellSize={cellSize}\n            onClick={this.createColumn}\n          >\n            +\n          </AddColumnButton>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nSquare.propTypes = {\n  cellSize: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport Square from \"../Square\";\nimport styled from \"styled-components\";\n\nconst GlobalContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding-top: 150px;\n`;\n\nfunction App() {\n  return (\n    <GlobalContainer>\n      <Square initialWidth={4} initialHeight={4} cellSize={50} />\n      <Square initialWidth={4} initialHeight={4} cellSize={50} />\n    </GlobalContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}