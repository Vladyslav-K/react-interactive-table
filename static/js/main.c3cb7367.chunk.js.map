{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Wrapper","styled","div","Container","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","buttonsVisible","currentRowIndex","RemoveColumnButton","currentCellIndex","Square","props","createSquare","newRows","newColumns","initialHeight","initialWidth","cells","uniqueKey","rows","setState","columns","onDragStart","clientX","clientY","offsetX","containerRef","current","getBoundingClientRect","left","offsetY","top","dragging","onDragging","pageX","pageY","state","style","onDragEnd","movingButtons","target","tagName","cellIndex","parentNode","rowIndex","createColumn","concat","createRow","deleteColumn","lastCellIndex","length","filter","column","index","prevState","removeColumnButtonDisplay","deleteRow","lastRowIndex","row","removeRowButtonDisplay","showButtons","hideButtons","React","createRef","this","document","addEventListener","event","console","log","ref","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","key","data-test","cell","onClick","Component","GlobalContainer","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c3cb7367.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  user-select: none;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  user-select: none;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  border: 1px solid #48aae6;\r\n  cursor: grab;\r\n  user-select: none;\r\n`;\r\n\r\nconst Cell = styled.td`\r\n  height: ${({ cellSize }) => cellSize}px;\r\n  min-width: ${({ cellSize }) => cellSize}px;\r\n  min-height: ${({ cellSize }) => cellSize}px;\r\n\r\n  padding: 0;\r\n\r\n  background-color: #48aae6;\r\n\r\n  user-select: none;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n\r\n  height: ${({ cellSize }) => cellSize}px;\r\n  width: ${({ cellSize }) => cellSize}px;\r\n  margin: 2px;\r\n\r\n  color: #ffffff;\r\n\r\n  font-size: ${({ cellSize }) => cellSize / 2}px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n\r\n  opacity: 1;\r\n\r\n  transition-duration: 0.6s;\r\n  cursor: pointer;\r\n\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n    transition-duration: 0.5s;\r\n  }\r\n`;\r\n\r\nconst AddButtons = styled(Button)`\r\n  background-color: #f3a500;\r\n`;\r\n\r\nconst RemoveButtons = styled(Button)`\r\n  visibility: hidden;\r\n  opacity: 0;\r\n\r\n  background-color: #b20000;\r\n`;\r\n\r\nconst AddRowButton = styled(AddButtons)`\r\n  top: 100%;\r\n  left: 1px;\r\n`;\r\n\r\nconst AddColumnButton = styled(AddButtons)`\r\n  top: 1px;\r\n  left: 100%;\r\n`;\r\n\r\nconst RemoveRowButton = styled(RemoveButtons)`\r\n  visibility: ${({ buttonsVisible }) =>\r\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\r\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\r\n\r\n  top: ${({ cellSize, currentRowIndex }) =>\r\n    cellSize * currentRowIndex + 2 * currentRowIndex}px;\r\n  right: 100%;\r\n  margin: 3px 2px;\r\n`;\r\n\r\nconst RemoveColumnButton = styled(RemoveButtons)`\r\n  visibility: ${({ buttonsVisible }) =>\r\n    buttonsVisible === true ? \"visible\" : \"hidden\"};\r\n  opacity: ${({ buttonsVisible }) => (buttonsVisible === true ? 1 : 0)};\r\n\r\n  bottom: 100%;\r\n  left: ${({ cellSize, currentCellIndex }) =>\r\n    cellSize * currentCellIndex + 2 * currentCellIndex}px;\r\n  margin: 2px 3px;\r\n`;\r\n\r\nexport default class Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rows: [],\r\n      columns: [],\r\n\r\n      currentCellIndex: 0,\r\n      currentRowIndex: 0,\r\n\r\n      buttonsVisible: false,\r\n      removeRowButtonDisplay: true,\r\n      removeColumnButtonDisplay: true,\r\n\r\n      dragging: false\r\n    };\r\n\r\n    this.containerRef = React.createRef();\r\n\r\n    this.uniqueKey = 0;\r\n\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createSquare();\r\n    document.addEventListener(\"mousemove\", event => this.onDragging(event));\r\n    document.addEventListener(\"mouseup\", () => this.onDragEnd());\r\n    console.log(\"Version [1.2]. Created at 19.11.2019, 09:50.\")\r\n  }\r\n\r\n  createSquare = () => {\r\n    const newRows = [];\r\n    const newColumns = [];\r\n\r\n    const { initialHeight, initialWidth } = this.props;\r\n\r\n    for (let cells = 0; cells < initialWidth; cells++) {\r\n      newColumns[cells] = this.uniqueKey++;\r\n    }\r\n\r\n    for (let rows = 0; rows < initialHeight; rows++) {\r\n      newRows[rows] = this.uniqueKey++;\r\n    }\r\n\r\n    this.setState({\r\n      rows: newRows,\r\n      columns: newColumns\r\n    });\r\n  };\r\n\r\n  onDragStart = ({ clientX, clientY }) => {\r\n    this.offsetX =\r\n      clientX - this.containerRef.current.getBoundingClientRect().left;\r\n    this.offsetY =\r\n      clientY - this.containerRef.current.getBoundingClientRect().top;\r\n\r\n    this.setState({\r\n      dragging: true\r\n    });\r\n  };\r\n\r\n  onDragging = ({ pageX, pageY }) => {\r\n    const { dragging } = this.state;\r\n\r\n    if (dragging) {\r\n      this.containerRef.current.style.left = pageX - this.offsetX + \"px\";\r\n      this.containerRef.current.style.top = pageY - this.offsetY + \"px\";\r\n    }\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.setState({\r\n      dragging: false\r\n    });\r\n  };\r\n\r\n  movingButtons = ({ target }) => {\r\n    if (target.tagName === \"TD\") {\r\n      this.setState({\r\n        currentCellIndex: target.cellIndex,\r\n        currentRowIndex: target.parentNode.rowIndex\r\n      });\r\n    }\r\n  };\r\n\r\n  createColumn = () => {\r\n    const { columns } = this.state;\r\n\r\n    this.setState({\r\n      columns: columns.concat(this.uniqueKey++)\r\n    });\r\n  };\r\n\r\n  createRow = () => {\r\n    const { rows } = this.state;\r\n\r\n    this.setState({\r\n      rows: rows.concat(this.uniqueKey++)\r\n    });\r\n  };\r\n\r\n  deleteColumn = () => {\r\n    const { currentCellIndex, columns } = this.state;\r\n    const lastCellIndex = columns.length - 1;\r\n\r\n    if (columns.length > 1) {\r\n      this.setState({\r\n        columns: columns.filter((column, index) => index !== currentCellIndex)\r\n      });\r\n    }\r\n\r\n    if (currentCellIndex === lastCellIndex) {\r\n      this.setState(prevState => ({\r\n        currentCellIndex: prevState.currentCellIndex - 1\r\n      }));\r\n    }\r\n\r\n    if (lastCellIndex <= 1) {\r\n      this.setState({\r\n        removeColumnButtonDisplay: false\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteRow = () => {\r\n    const { currentRowIndex, rows } = this.state;\r\n    const lastRowIndex = rows.length - 1;\r\n\r\n    if (rows.length > 1) {\r\n      this.setState({\r\n        rows: rows.filter((row, index) => index !== currentRowIndex)\r\n      });\r\n    }\r\n\r\n    if (currentRowIndex === lastRowIndex) {\r\n      this.setState(prevState => ({\r\n        currentRowIndex: prevState.currentRowIndex - 1\r\n      }));\r\n    }\r\n\r\n    if (lastRowIndex <= 1) {\r\n      this.setState({\r\n        removeRowButtonDisplay: false\r\n      });\r\n    }\r\n  };\r\n\r\n  showButtons = () => {\r\n    const { rows, columns } = this.state;\r\n\r\n    if (rows.length > 1) {\r\n      this.setState({\r\n        buttonsVisible: true,\r\n        removeRowButtonDisplay: true\r\n      });\r\n    }\r\n\r\n    if (columns.length > 1) {\r\n      this.setState({\r\n        buttonsVisible: true,\r\n        removeColumnButtonDisplay: true\r\n      });\r\n    }\r\n  };\r\n\r\n  hideButtons = () => {\r\n    this.setState({\r\n      buttonsVisible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { cellSize } = this.props;\r\n\r\n    const {\r\n      rows,\r\n      columns,\r\n      buttonsVisible,\r\n      removeRowButtonDisplay,\r\n      removeColumnButtonDisplay,\r\n      currentRowIndex,\r\n      currentCellIndex\r\n    } = this.state;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Container ref={this.containerRef} onMouseOver={this.movingButtons}>\r\n          <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\r\n            <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\r\n              <tbody>\r\n                {rows.map(row => (\r\n                  <tr key={`row-${row}`} data-test=\"row\">\r\n                    {columns.map(cell => (\r\n                      <Cell\r\n                        data-test=\"cell\"\r\n                        key={`cell-${cell}`}\r\n                        cellSize={cellSize}\r\n                      />\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n\r\n            {removeRowButtonDisplay && (\r\n              <RemoveRowButton\r\n                data-test=\"remove-row-button\"\r\n                onClick={this.deleteRow}\r\n                cellSize={cellSize}\r\n                currentRowIndex={currentRowIndex}\r\n                buttonsVisible={buttonsVisible}\r\n              >\r\n                -\r\n              </RemoveRowButton>\r\n            )}\r\n\r\n            {removeColumnButtonDisplay && (\r\n              <RemoveColumnButton\r\n                data-test=\"remove-column-button\"\r\n                onClick={this.deleteColumn}\r\n                cellSize={cellSize}\r\n                currentCellIndex={currentCellIndex}\r\n                buttonsVisible={buttonsVisible}\r\n              >\r\n                -\r\n              </RemoveColumnButton>\r\n            )}\r\n          </div>\r\n          <AddRowButton\r\n            data-test=\"add-row-button\"\r\n            cellSize={cellSize}\r\n            onClick={this.createRow}\r\n          >\r\n            +\r\n          </AddRowButton>\r\n          <AddColumnButton\r\n            data-test=\"add-column-button\"\r\n            cellSize={cellSize}\r\n            onClick={this.createColumn}\r\n          >\r\n            +\r\n          </AddColumnButton>\r\n        </Container>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nSquare.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n  initialHeight: PropTypes.number.isRequired,\r\n  initialWidth: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\nimport Square from \"../Square\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GlobalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding-top: 150px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalContainer>\r\n      <Square initialWidth={4} initialHeight={4} cellSize={50} />\r\n      <Square initialWidth={4} initialHeight={4} cellSize={50} />\r\n    </GlobalContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}