{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Wrapper","styled","div","Container","props","containerPosition","left","top","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","removeRowButtonDisplay","buttonsVisible","buttonsPoisiton","RemoveColumnButton","removeColumnButtonDisplay","Square","throttle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","createSquare","state","rows","columns","cloneRows","cloneColumns","initialHeight","initialWidth","cells","key","cellKey","rowKey","setState","onDragStart","clientX","clientY","offsetX","container","getBoundingClientRect","offsetY","dragging","onDrag","pageX","pageY","style","onDragging","event","persist","onDragEnd","containerStyle","cloneContainerPosition","removeAttribute","movingButtons","target","cloneButtonsPosition","tagName","currentCellIndex","cellIndex","currentRowIndex","parentNode","rowIndex","createColumn","createRow","deleteColumn","columnsLength","length","lastCellIndex","splice","deleteRow","rowsLength","lastRowIndex","showButtons","hideButtons","square","document","querySelector","onMouseMove","onMouseUp","id","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","row","cell","onClick","React","Component","defaultProps","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4e60ec27.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n\n  margin: 0;\n  padding: 0;\n\n  user-select: none;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n\n  left: ${props => props.containerPosition.left};\n  top: ${props => props.containerPosition.top};\n\n  user-select: none;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #48aae6;\n  cursor: grab;\n  user-select: none;\n`;\n\nconst Cell = styled.td`\n  height: ${props => props.cellSize}px;\n  width: ${props => props.cellSize}px;\n\n  padding: 0;\n\n  background-color: #48aae6;\n\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n\n  height: ${props => props.cellSize}px;\n  width: ${props => props.cellSize}px;\n  margin: 2px;\n\n  color: #ffffff;\n\n  font-size: ${props => props.cellSize / 2}px;\n  font-weight: bold;\n  text-align: center;\n\n  opacity: 1;\n\n  transition-duration: 0.6s;\n  cursor: pointer;\n\n  user-select: none;\n\n  &:hover {\n    opacity: 0.8;\n    transition-duration: 0.5s;\n  }\n`;\n\nconst AddButtons = styled(Button)`\n  background-color: #f3a500;\n`;\n\nconst RemoveButtons = styled(Button)`\n  display: block;\n  visibility: hidden;\n\n  background-color: #b20000;\n\n  line-height: ${props => props.cellSize - props.cellSize / 5}px;\n`;\n\nconst AddRowButton = styled(AddButtons)`\n  top: 100%;\n  left: 1px;\n`;\n\nconst AddColumnButton = styled(AddButtons)`\n  top: 1px;\n  left: 100%;\n`;\n\nconst RemoveRowButton = styled(RemoveButtons)`\n  display: ${props =>\n    props.removeRowButtonDisplay === true ? \"block\" : \"none\"};\n  visibility: ${props =>\n    props.buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${props => (props.buttonsVisible === true ? 1 : 0)};\n\n  top: ${props => props.buttonsPoisiton.top}px;\n  right: 100%;\n  margin: 3px 2px;\n`;\n\nconst RemoveColumnButton = styled(RemoveButtons)`\n  display: ${props =>\n    props.removeColumnButtonDisplay === true ? \"block\" : \"none\"};\n  visibility: ${props =>\n    props.buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${props => (props.buttonsVisible === true ? 1 : 0)};\n\n  bottom: 100%;\n  left: ${props => props.buttonsPoisiton.left}px;\n  margin: 2px 3px;\n`;\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      square: [],\n\n      rows: [],\n      columns: [],\n\n      containerPosition: {\n        left: `${this.props.cellSize * 2}px`,\n        top: `${this.props.cellSize * 2}px`\n      },\n\n      buttonsPoisiton: {\n        left: 0,\n        top: 0\n      },\n\n      buttonsVisible: false,\n      removeRowButtonDisplay: true,\n      removeColumnButtonDisplay: true,\n\n      dragging: false\n    };\n\n    this.rowKey = 0;\n    this.cellKey = 0;\n\n    this.currentCellIndex = 0;\n    this.currentRowIndex = 0;\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n\n    this.onDrag = this.throttle(this.onDrag, 20);\n  }\n\n  throttle = (func, ms) => {\n    let isThrottled = false,\n      savedArgs,\n      savedThis;\n\n    function wrapper() {\n      if (isThrottled) {\n        savedArgs = arguments;\n        savedThis = this;\n        return;\n      }\n\n      func.apply(this, arguments);\n\n      isThrottled = true;\n\n      setTimeout(function() {\n        isThrottled = false;\n        if (savedArgs) {\n          wrapper.apply(savedThis, savedArgs);\n          savedArgs = savedThis = null;\n        }\n      }, ms);\n    }\n\n    return wrapper;\n  };\n\n  componentDidMount() {\n    this.createSquare();\n    this.container = document.querySelector(\"#container\");\n  }\n\n  createSquare = () => {\n    const { rows, columns } = this.state;\n    const cloneRows = [...rows];\n    const cloneColumns = [...columns];\n\n    const { initialHeight, initialWidth } = this.props;\n\n    for (let cells = 0; cells < initialWidth; cells++) {\n      cloneColumns[cells] = {\n        key: this.cellKey++\n      };\n    }\n\n    for (let rows = 0; rows < initialHeight; rows++) {\n      cloneRows[rows] = {\n        key: this.rowKey++,\n        columns: cloneColumns\n      };\n    }\n\n    this.setState({\n      rows: cloneRows,\n      columns: cloneColumns\n    });\n  };\n\n  onDragStart = ({ clientX, clientY }) => {\n    this.offsetX = clientX - this.container.getBoundingClientRect().left;\n    this.offsetY = clientY - this.container.getBoundingClientRect().top;\n\n    this.setState({\n      dragging: true\n    });\n  };\n\n  onDrag = ({ pageX, pageY }) => {\n    const { dragging } = this.state;\n\n    if (dragging) {\n      this.container.style.left = pageX - this.offsetX + \"px\";\n      this.container.style.top = pageY - this.offsetY + \"px\";\n    }\n  };\n\n  onDragging = event => {\n    event.persist();\n    this.onDrag(event);\n  };\n\n  onDragEnd = () => {\n    const container = this.container;\n    const containerStyle = container.style;\n\n    const cloneContainerPosition = { ...this.state.containerPosition };\n    cloneContainerPosition.left = containerStyle.left;\n    cloneContainerPosition.top = containerStyle.top;\n\n    if (containerStyle.left && containerStyle.top) {\n      this.setState({\n        containerPosition: cloneContainerPosition\n      });\n      container.removeAttribute(\"style\");\n    }\n\n    this.setState({\n      dragging: false\n    });\n  };\n\n  movingButtons = ({ target }) => {\n    const { cellSize } = this.props;\n    const { buttonsPoisiton } = this.state;\n    const cloneButtonsPosition = { ...buttonsPoisiton };\n\n    if (target.tagName === \"TD\") {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n    of the button should be considered when calculating */\n      this.currentCellIndex = target.cellIndex;\n      this.currentRowIndex = target.parentNode.rowIndex;\n\n      cloneButtonsPosition.left =\n        cellSize * this.currentCellIndex + 2 * this.currentCellIndex;\n      cloneButtonsPosition.top =\n        cellSize * this.currentRowIndex + 2 * this.currentRowIndex;\n    }\n\n    this.setState({\n      buttonsPoisiton: cloneButtonsPosition\n    });\n  };\n\n  createColumn = () => {\n    const { columns } = this.state;\n    const cloneColumns = [...columns, { key: this.cellKey++ }];\n\n    this.setState({\n      columns: cloneColumns\n    });\n  };\n\n  createRow = () => {\n    const { rows, columns } = this.state;\n    const cloneColumns = [...columns];\n    const cloneRows = [...rows, { key: this.rowKey++, columns: cloneColumns }];\n\n    this.setState({\n      rows: cloneRows\n    });\n  };\n\n  deleteColumn = () => {\n    const { cellSize } = this.props;\n    const { rows, columns, buttonsPoisiton } = this.state;\n    const cloneButtonsPosition = { ...buttonsPoisiton };\n\n    const cloneRows = [...rows];\n    const cloneColumns = [...columns];\n\n    const columnsLength = cloneColumns.length;\n    const lastCellIndex = columnsLength - 1;\n\n    if (columnsLength > 1) {\n      cloneColumns.splice(this.currentCellIndex, 1);\n    }\n\n    if (this.currentCellIndex === lastCellIndex) {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n      of the button should be considered when calculating */\n      cloneButtonsPosition.left =\n        cellSize * (this.currentCellIndex - 1) + 2 * this.currentCellIndex;\n\n      this.currentCellIndex--;\n    }\n\n    if (lastCellIndex <= 1) {\n      this.setState({\n        removeColumnButtonDisplay: false\n      });\n    }\n\n    this.setState({\n      rows: cloneRows,\n      columns: cloneColumns,\n      buttonsPoisiton: cloneButtonsPosition\n    });\n  };\n\n  deleteRow = () => {\n    const { cellSize } = this.props;\n    const { rows, buttonsPoisiton } = this.state;\n    const cloneButtonsPosition = { ...buttonsPoisiton };\n\n    const cloneRows = [...rows];\n\n    const rowsLength = cloneRows.length;\n    const lastRowIndex = rowsLength - 1;\n\n    if (rowsLength > 1) {\n      cloneRows.splice(this.currentRowIndex, 1);\n    }\n\n    if (this.currentRowIndex === lastRowIndex) {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n    of the button should be considered when calculating */\n      cloneButtonsPosition.top =\n        cellSize * (this.currentRowIndex - 1) + 2 * this.currentRowIndex;\n\n      this.currentRowIndex--;\n    }\n\n    if (lastRowIndex <= 1) {\n      this.setState({\n        removeRowButtonDisplay: false\n      });\n    }\n\n    this.setState({\n      rows: cloneRows,\n      buttonsPoisiton: cloneButtonsPosition\n    });\n  };\n\n  showButtons = () => {\n    const { rows, columns } = this.state;\n\n    if (rows.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeRowButtonDisplay: true\n      });\n    }\n\n    if (columns.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeColumnButtonDisplay: true\n      });\n    }\n  };\n\n  hideButtons = () => {\n    this.setState({\n      buttonsVisible: false\n    });\n  };\n\n  render() {\n    const { cellSize } = this.props;\n\n    const {\n      rows,\n      columns,\n      buttonsVisible,\n      removeRowButtonDisplay,\n      removeColumnButtonDisplay,\n      buttonsPoisiton,\n      containerPosition\n    } = this.state;\n\n    return (\n      <Wrapper onMouseMove={this.onDragging} onMouseUp={this.onDragEnd}>\n        <Container\n          id={\"container\"}\n          containerPosition={containerPosition}\n          cellSize={cellSize}\n          onMouseOver={this.movingButtons}\n        >\n          <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\n            <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\n              <tbody>\n                {rows.map(row => (\n                  <tr key={`row-${row.key}`} id=\"row\">\n                    {columns.map(cell => (\n                      <Cell\n                        key={`cell-${cell.key}`}\n                        id=\"cell\"\n                        cellSize={cellSize}\n                      />\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            <RemoveRowButton\n              id=\"remove-row-button\"\n              onClick={this.deleteRow}\n              cellSize={cellSize}\n              buttonsVisible={buttonsVisible}\n              removeRowButtonDisplay={removeRowButtonDisplay}\n              buttonsPoisiton={buttonsPoisiton}\n            >\n              -\n            </RemoveRowButton>\n            <RemoveColumnButton\n              id=\"remove-column-button\"\n              onClick={this.deleteColumn}\n              cellSize={cellSize}\n              buttonsVisible={buttonsVisible}\n              removeColumnButtonDisplay={removeColumnButtonDisplay}\n              buttonsPoisiton={buttonsPoisiton}\n            >\n              -\n            </RemoveColumnButton>\n          </div>\n          <AddRowButton id=\"add-row-button\" cellSize={cellSize} onClick={this.createRow}>\n            +\n          </AddRowButton>\n          <AddColumnButton id=\"add-column-button\" cellSize={cellSize} onClick={this.createColumn}>\n            +\n          </AddColumnButton>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  cellSize: 50,\n  initialHeight: 4,\n  initialWidth: 4\n};\n\nSquare.propTypes = {\n  cellSize: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport Square from \"../Square\";\n\nfunction App() {\n  return <Square initialWidth={4} initialHeight={4} cellSize={50} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}