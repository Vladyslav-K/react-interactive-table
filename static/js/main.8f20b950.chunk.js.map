{"version":3,"sources":["components/Square/index.js","components/App/index.js","index.js"],"names":["Wrapper","styled","div","Container","props","containerPosition","left","top","Table","table","Cell","td","cellSize","Button","AddButtons","RemoveButtons","AddRowButton","AddColumnButton","RemoveRowButton","buttonsVisible","buttonsPosition","RemoveColumnButton","Square","createSquare","state","rows","columns","cloneRows","cloneColumns","initialHeight","initialWidth","cells","key","cellKey","rowKey","setState","throttle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","onDragStart","clientX","clientY","offsetX","containerRef","current","getBoundingClientRect","offsetY","dragging","onDrag","pageX","pageY","style","onDragging","event","persist","onDragEnd","container","containerStyle","cloneContainerPosition","removeAttribute","movingButtons","target","cloneButtonsPosition","tagName","currentCellIndex","cellIndex","currentRowIndex","parentNode","rowIndex","createColumn","createRow","deleteColumn","columnsLength","length","lastCellIndex","splice","removeColumnButtonDisplay","deleteRow","rowsLength","lastRowIndex","removeRowButtonDisplay","showButtons","hideButtons","React","createRef","console","log","onMouseMove","onMouseUp","ref","onMouseOver","onMouseEnter","onMouseLeave","onMouseDown","map","row","id","cell","onClick","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f20b950.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n\n  margin: 0;\n  padding: 0;\n\n  user-select: none;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n\n  left: ${props => props.containerPosition.left};\n  top: ${props => props.containerPosition.top};\n\n  user-select: none;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #48aae6;\n  cursor: grab;\n  user-select: none;\n`;\n\nconst Cell = styled.td`\n  height: ${props => props.cellSize}px;\n  width: ${props => props.cellSize}px;\n\n  padding: 0;\n\n  background-color: #48aae6;\n\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n\n  height: ${props => props.cellSize}px;\n  width: ${props => props.cellSize}px;\n  margin: 2px;\n\n  color: #ffffff;\n\n  font-size: ${props => props.cellSize / 2}px;\n  font-weight: bold;\n  text-align: center;\n\n  opacity: 1;\n\n  transition-duration: 0.6s;\n  cursor: pointer;\n\n  user-select: none;\n\n  &:hover {\n    opacity: 0.8;\n    transition-duration: 0.5s;\n  }\n`;\n\nconst AddButtons = styled(Button)`\n  background-color: #f3a500;\n`;\n\nconst RemoveButtons = styled(Button)`\n  visibility: hidden;\n  opacity: 0;\n\n  background-color: #b20000;\n\n  line-height: ${props => props.cellSize - props.cellSize / 5}px;\n`;\n\nconst AddRowButton = styled(AddButtons)`\n  top: 100%;\n  left: 1px;\n`;\n\nconst AddColumnButton = styled(AddButtons)`\n  top: 1px;\n  left: 100%;\n`;\n\nconst RemoveRowButton = styled(RemoveButtons)`\n  visibility: ${props =>\n    props.buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${props => (props.buttonsVisible === true ? 1 : 0)};\n\n  top: ${props => props.buttonsPosition.top}px;\n  right: 100%;\n  margin: 3px 2px;\n`;\n\nconst RemoveColumnButton = styled(RemoveButtons)`\n  visibility: ${props =>\n    props.buttonsVisible === true ? \"visible\" : \"hidden\"};\n  opacity: ${props => (props.buttonsVisible === true ? 1 : 0)};\n\n  bottom: 100%;\n  left: ${props => props.buttonsPosition.left}px;\n  margin: 2px 3px;\n`;\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      columns: [],\n\n      containerPosition: {\n        left: `${this.props.cellSize * 2}px`,\n        top: `${this.props.cellSize * 2}px`\n      },\n\n      buttonsPosition: {\n        left: 0,\n        top: 0\n      },\n\n      buttonsVisible: false,\n      removeRowButtonDisplay: true,\n      removeColumnButtonDisplay: true,\n\n      dragging: false\n    };\n\n    this.containerRef = React.createRef();\n\n    this.rowKey = 0;\n    this.cellKey = 0;\n\n    this.currentCellIndex = 0;\n    this.currentRowIndex = 0;\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n\n    this.onDrag = this.throttle(this.onDrag, 20);\n  }\n\n  componentDidMount() {\n    this.createSquare();\n    console.log(\"Version 0.30. Created at 18.11.2019, 11:40\")\n  }\n\n  createSquare = () => {\n    const { rows, columns } = this.state;\n    const cloneRows = [...rows];\n    const cloneColumns = [...columns];\n\n    const { initialHeight, initialWidth } = this.props;\n\n    for (let cells = 0; cells < initialWidth; cells++) {\n      cloneColumns[cells] = {\n        key: this.cellKey++\n      };\n    }\n\n    for (let rows = 0; rows < initialHeight; rows++) {\n      cloneRows[rows] = {\n        key: this.rowKey++,\n        columns: cloneColumns\n      };\n    }\n\n    this.setState({\n      rows: cloneRows,\n      columns: cloneColumns\n    });\n  };\n\n  throttle = (func, ms) => {\n    let isThrottled = false,\n      savedArgs,\n      savedThis;\n\n    function wrapper() {\n      if (isThrottled) {\n        savedArgs = arguments;\n        savedThis = this;\n        return;\n      }\n\n      func.apply(this, arguments);\n\n      isThrottled = true;\n\n      setTimeout(function() {\n        isThrottled = false;\n        if (savedArgs) {\n          wrapper.apply(savedThis, savedArgs);\n          savedArgs = savedThis = null;\n        }\n      }, ms);\n    }\n\n    return wrapper;\n  };\n\n  onDragStart = ({ clientX, clientY }) => {\n    this.offsetX = clientX - this.containerRef.current.getBoundingClientRect().left;\n    this.offsetY = clientY - this.containerRef.current.getBoundingClientRect().top;\n\n    this.setState({\n      dragging: true\n    });\n  };\n\n  onDrag = ({ pageX, pageY }) => {\n    const { dragging } = this.state;\n\n    if (dragging) {\n      this.containerRef.current.style.left = pageX - this.offsetX + \"px\";\n      this.containerRef.current.style.top = pageY - this.offsetY + \"px\";\n    }\n  };\n\n  onDragging = event => {\n    event.persist();\n    this.onDrag(event);\n  };\n\n  onDragEnd = () => {\n    const container = this.containerRef.current;\n    const containerStyle = container.style;\n\n    const cloneContainerPosition = { ...this.state.containerPosition };\n    cloneContainerPosition.left = containerStyle.left;\n    cloneContainerPosition.top = containerStyle.top;\n\n    if (containerStyle.left && containerStyle.top) {\n      this.setState({\n        containerPosition: cloneContainerPosition\n      });\n      container.removeAttribute(\"style\");\n    }\n\n    this.setState({\n      dragging: false\n    });\n  };\n\n  movingButtons = ({ target }) => {\n    const { cellSize } = this.props;\n    const { buttonsPosition } = this.state;\n    const cloneButtonsPosition = { ...buttonsPosition };\n\n    if (target.tagName === \"TD\") {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n    of the button should be considered when calculating */\n      this.currentCellIndex = target.cellIndex;\n      this.currentRowIndex = target.parentNode.rowIndex;\n\n      cloneButtonsPosition.left =\n        cellSize * this.currentCellIndex + 2 * this.currentCellIndex;\n      cloneButtonsPosition.top =\n        cellSize * this.currentRowIndex + 2 * this.currentRowIndex;\n    }\n\n    this.setState({\n      buttonsPosition: cloneButtonsPosition\n    });\n  };\n\n  createColumn = () => {\n    const { columns } = this.state;\n    const cloneColumns = [...columns, { key: this.cellKey++ }];\n\n    this.setState({\n      columns: cloneColumns\n    });\n  };\n\n  createRow = () => {\n    const { rows, columns } = this.state;\n    const cloneRows = [...rows, { key: this.rowKey++, columns }];\n\n    this.setState({\n      rows: cloneRows\n    });\n  };\n\n  deleteColumn = () => {\n    const { cellSize } = this.props;\n    const { rows, columns, buttonsPosition } = this.state;\n    const cloneButtonsPosition = { ...buttonsPosition };\n\n    const cloneRows = [...rows];\n    const cloneColumns = [...columns];\n\n    const columnsLength = cloneColumns.length;\n    const lastCellIndex = columnsLength - 1;\n\n    if (columnsLength > 1) {\n      cloneColumns.splice(this.currentCellIndex, 1);\n    }\n\n    if (this.currentCellIndex === lastCellIndex) {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n      of the button should be considered when calculating */\n      cloneButtonsPosition.left =\n        cellSize * (this.currentCellIndex - 1) + 2 * this.currentCellIndex;\n\n      this.currentCellIndex--;\n    }\n\n    if (lastCellIndex <= 1) {\n      this.setState({\n        removeColumnButtonDisplay: false\n      });\n    }\n\n    this.setState({\n      rows: cloneRows,\n      columns: cloneColumns,\n      buttonsPosition: cloneButtonsPosition\n    });\n  };\n\n  deleteRow = () => {\n    const { cellSize } = this.props;\n    const { rows, buttonsPosition } = this.state;\n    const cloneButtonsPosition = { ...buttonsPosition };\n\n    const cloneRows = [...rows];\n\n    const rowsLength = cloneRows.length;\n    const lastRowIndex = rowsLength - 1;\n\n    if (rowsLength > 1) {\n      cloneRows.splice(this.currentRowIndex, 1);\n    }\n\n    if (this.currentRowIndex === lastRowIndex) {\n      /* In this formula \"2\" - the padding of each cell, for the correct movement\n    of the button should be considered when calculating */\n      cloneButtonsPosition.top =\n        cellSize * (this.currentRowIndex - 1) + 2 * this.currentRowIndex;\n\n      this.currentRowIndex--;\n    }\n\n    if (lastRowIndex <= 1) {\n      this.setState({\n        removeRowButtonDisplay: false\n      });\n    }\n\n    this.setState({\n      rows: cloneRows,\n      buttonsPosition: cloneButtonsPosition\n    });\n  };\n\n  showButtons = () => {\n    const { rows, columns } = this.state;\n\n    if (rows.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeRowButtonDisplay: true\n      });\n    }\n\n    if (columns.length > 1) {\n      this.setState({\n        buttonsVisible: true,\n        removeColumnButtonDisplay: true\n      });\n    }\n  };\n\n  hideButtons = () => {\n    this.setState({\n      buttonsVisible: false\n    });\n  };\n\n  render() {\n    const { cellSize } = this.props;\n\n    const {\n      rows,\n      columns,\n      buttonsVisible,\n      removeRowButtonDisplay,\n      removeColumnButtonDisplay,\n      buttonsPosition,\n      containerPosition\n    } = this.state;\n\n    return (\n      <Wrapper onMouseMove={this.onDragging} onMouseUp={this.onDragEnd}>\n        <Container\n          ref={this.containerRef}\n          containerPosition={containerPosition}\n          cellSize={cellSize}\n          onMouseOver={this.movingButtons}\n        >\n          <div onMouseEnter={this.showButtons} onMouseLeave={this.hideButtons}>\n            <Table onMouseDown={this.onDragStart} onDragStart={() => false}>\n              <tbody>\n                {rows.map(row => (\n                  <tr key={`row-${row.key}`} id=\"row\">\n                    {columns.map(cell => (\n                      <Cell\n                        key={`cell-${cell.key}`}\n                        id=\"cell\"\n                        cellSize={cellSize}\n                      />\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            {removeRowButtonDisplay && (\n              <RemoveRowButton\n                id=\"remove-row-button\"\n                onClick={this.deleteRow}\n                cellSize={cellSize}\n                buttonsVisible={buttonsVisible}\n                buttonsPosition={buttonsPosition}\n              >\n                -\n              </RemoveRowButton>\n            )}\n\n            {removeColumnButtonDisplay && (\n              <RemoveColumnButton\n                id=\"remove-column-button\"\n                onClick={this.deleteColumn}\n                cellSize={cellSize}\n                buttonsVisible={buttonsVisible}\n                buttonsPosition={buttonsPosition}\n              >\n                -\n              </RemoveColumnButton>\n            )}\n          </div>\n          <AddRowButton\n            id=\"add-row-button\"\n            cellSize={cellSize}\n            onClick={this.createRow}\n          >\n            +\n          </AddRowButton>\n          <AddColumnButton\n            id=\"add-column-button\"\n            cellSize={cellSize}\n            onClick={this.createColumn}\n          >\n            +\n          </AddColumnButton>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  cellSize: 50,\n  initialHeight: 4,\n  initialWidth: 4\n};\n\nSquare.propTypes = {\n  cellSize: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport Square from \"../Square\";\n\nfunction App() {\n  return <Square initialWidth={4} initialHeight={4} cellSize={50} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}